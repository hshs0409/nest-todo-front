[{"C:\\Users\\User\\web\\nest-todo-front\\src\\index.tsx":"1","C:\\Users\\User\\web\\nest-todo-front\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\web\\nest-todo-front\\src\\App.tsx":"3","C:\\Users\\User\\web\\nest-todo-front\\src\\apollo.ts":"4","C:\\Users\\User\\web\\nest-todo-front\\src\\routers\\logged-out-router.tsx":"5","C:\\Users\\User\\web\\nest-todo-front\\src\\routers\\logged-in-router.tsx":"6","C:\\Users\\User\\web\\nest-todo-front\\src\\pages\\login.tsx":"7","C:\\Users\\User\\web\\nest-todo-front\\src\\pages\\create-account.tsx":"8","C:\\Users\\User\\web\\nest-todo-front\\src\\components\\form-error.tsx":"9","C:\\Users\\User\\web\\nest-todo-front\\src\\components\\button.tsx":"10"},{"size":653,"mtime":1609642590574,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":399,"mtime":1609748997645,"results":"14","hashOfConfig":"12"},{"size":449,"mtime":1609652504648,"results":"15","hashOfConfig":"12"},{"size":498,"mtime":1609655666915,"results":"16","hashOfConfig":"12"},{"size":293,"mtime":1609657274110,"results":"17","hashOfConfig":"12"},{"size":3087,"mtime":1609758598275,"results":"18","hashOfConfig":"12"},{"size":120,"mtime":1609655720892,"results":"19","hashOfConfig":"12"},{"size":236,"mtime":1609748353680,"results":"20","hashOfConfig":"12"},{"size":483,"mtime":1609762124102,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tgedjj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\User\\web\\nest-todo-front\\src\\index.tsx",[],["45","46"],"C:\\Users\\User\\web\\nest-todo-front\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\App.tsx",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\apollo.ts",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\pages\\login.tsx",["47"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nfunction Login() {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({ mode: \"onBlur\" });\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { error, ok, token },\r\n    } = data;\r\n    if (ok) {\r\n      console.log(token);\r\n    }\r\n  };\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, { onCompleted });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center justify-center bg-gray-800\">\r\n      <div className=\"bg-white w-full max-w-lg pt-10 pb-7 rounded-lg text-center\">\r\n        <h3 className=\"text-2xl text-gray-800\">Todo App</h3>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 px-5 mb-3\"\r\n        >\r\n          <input\r\n            ref={register({ required: \"Email is required\" })}\r\n            required\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 6 })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input \"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          {errors.password?.type && (\r\n            <FormError errorMessage=\"Password must be more than 6 chars.\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            actionText={\"Log In\"}\r\n            loading={loading}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          <Link to=\"/create-account\" className=\"text-blue-600 hover:underline\">\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\User\\web\\nest-todo-front\\src\\pages\\create-account.tsx",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\components\\form-error.tsx",[],"C:\\Users\\User\\web\\nest-todo-front\\src\\components\\button.tsx",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":37,"column":16,"nodeType":"56","messageId":"57","endLine":37,"endColumn":21},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["60"],["61"],"no-global-assign","no-unsafe-negation"]